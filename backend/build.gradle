plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'

	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

ext{
	snippetDir = file('build/generated-snippets') //snippets 파일을 저장할 디렉토리 생성
}

asciidoctor{ //asciidoctor 설정 task
	inputs.dir snippetDir   //snippets 디렉토리를 입력으로 함
	dependsOn test // test task를 의존하도록 하여, 문서 생성 전에 test를 수행하도록 함
}

bootJar{ //springboot를 이용한 jar 파일 생성 시 필요한 설정 task
	dependsOn asciidoctor //asciidoctor 를 의존하도록 하여, bootJar 생성 전에 asciidoctor task를 수행하도록 함
	// (jar 파일 생성 시, 문서 생성을 보장 함)
	from("build/docs/asciidoc"){ //문서 생성 시, Jar 파일 내 static/docs 에도 복사되도록 함
		into 'static/docs'
	}
}


group = 'mangnani'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExt
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}


tasks.named('test') {
	useJUnitPlatform()
}
